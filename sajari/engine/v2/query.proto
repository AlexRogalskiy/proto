syntax = "proto3";

package sajari.engine.v2;

import "sajari/engine/v2/record.proto";

option go_package = "code.sajari.com/protogen-go/sajari/engine/v2;enginepb";

// QueryResult is a record as represented in a search result.
message QueryResult {
   // Meta data in field-value pairs.
   map<string, sajari.engine.v2.Value> values = 1;

   // Score (normalised) attributed to this record.
   // Combines the index score and feature score.
   double score = 2;

   // Index score.
   double index_score = 3;
}

// QueryAggregateResult contains results of aggregations.
message QueryAggregateResult {
   // Metric represents the metric type requested, represented by an Enumeration Type.
   message Metric {
      double value = 1;
   }
   // Count contains the counts for the set of values returned
   message Count {
      map<string, int32> counts = 1;
   }

   // Buckets is a full set of buckets computed in an aggregation.
   message Buckets {
      // Bucket is the result of a bucket aggregate.
      message Bucket {
         // Name of bucket.
         string name = 1;
         // Number of records in the bucket.
         int32 count = 2;
      }
      map<string, Bucket> buckets = 1;
   }

   message Date {
      map<string, int32> dates = 1;
   }

   message Analysis {
      oneof value {
         // Coverage is the number of records which have a value
         // set.
         int32 coverage = 1;

         // Cardinality is the number of different values in a field.
         int32 cardinality = 2;

         // Min length of a repeated field.
         int32 min_len = 3;

         // Max number of values in a repeated field.
         int32 max_len = 4;

         // Avg number of items in repeated field.
         float avg_len = 5;
      }
   }

   oneof aggregate_result {
      Metric metric = 1;
      Count count = 2;
      Buckets buckets = 3;
      Date date = 4;
      Analysis analysis = 5;
   }
}